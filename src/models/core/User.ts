/* eslint-disable import/no-cycle */
import { Cache, Model } from 'base-repo';
import {
  AllowNull, AutoIncrement, BelongsToMany, Column, NotEmpty, PrimaryKey, Table,
} from 'sequelize-typescript';
import { IUnfilledAtt, Optional } from 'utils/base-class/base.interface';
import { Booking } from './Booking';
import { FacilitySchedule } from './FacilitySchedule';

interface AutoGeneratedAttr {
  id: number;
  password: string;
}

interface INullableAttr extends IUnfilledAtt {
  noHp: number;
}

export interface IModel extends
  Optional<INullableAttr>,
  AutoGeneratedAttr {
  name: string;
  email: string;
}

export type IModelCreate = Omit<IModel, 'id' | keyof AutoGeneratedAttr> & Partial<AutoGeneratedAttr>;

@Table({
  tableName: 'user',
  paranoid: true,
  indexes: [{ fields: ['email'] }],
})
export class User extends Model<IModel, IModelCreate> implements IModel {
  @PrimaryKey
  @NotEmpty
  @AutoIncrement
  @Column
    id:number;

  @AllowNull(false)
  @Column
    noId: number;

  @AllowNull(false)
  @Column
    name: string;

  @AllowNull(false)
  @Column
    noHp: number;

  @AllowNull(false)
  @Column
    email: string;

  @AllowNull(false)
  @Column
    password: string;

  @AllowNull(false)
  @Column
    birthDate: Date;

  @AllowNull(false)
  @Column
    address: string;

  @BelongsToMany(() => FacilitySchedule, () => Booking)
    schedule!: Array<FacilitySchedule & { booking: Booking }>;
}
